# Имя вашего воркфлоу, которое будет отображаться в GitHub Actions
name: Run Live Analysis On-Demand

# Условия запуска: только вручную через интерфейс GitHub
on:
  workflow_dispatch:
    # Определяем входные данные (параметры), которые нужно будет указать при запуске
    inputs:
      job_id:
        description: 'ID задачи (job_id) из базы данных'
        required: true # Это поле обязательное
      company_id:
        description: 'ID компании (company_id) для анализа'
        required: true # Это поле тоже обязательное

# Определяем задачи (jobs), которые будут выполняться
jobs:
  run-analysis:
    # На какой операционной системе будет работать задача
    runs-on: ubuntu-latest

    # Шаги, которые будут выполнены последовательно
    steps:
      # Шаг 1: Скачиваем (клонируем) код вашего репозитория на виртуальную машину
      - name: Checkout repository
        uses: actions/checkout@v4

      # Шаг 2: Устанавливаем Node.js нужной версии
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # Используем версию 18, как в вашем рабочем примере
          node-version: '18'
          # Включаем кэширование зависимостей для ускорения будущих запусков
          cache: 'npm'

      # Шаг 3: Устанавливаем все зависимости, перечисленные в файле package.json
      - name: Install dependencies
        run: npm install

      # Шаг 4: Запускаем наш скрипт анализа
      - name: Run Analysis Script
        # Передаем секреты из настроек репозитория в переменные окружения для скрипта
        env:
          # Здесь мы говорим:
          # "Создай переменную SUPABASE_URL и возьми для нее значение из секрета с именем PROJECT_URL"
          SUPABASE_URL: ${{ secrets.PROJECT_URL }}
          # "Создай переменную SUPABASE_SERVICE_KEY и возьми значение из секрета SERVICE_KEY"
          SUPABASE_SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
          # Остальные секреты
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          HH_USER_AGENT: ${{ secrets.HH_USER_AGENT }}
        # Команда для запуска. Символ `>` позволяет писать команду на нескольких строках
        run: >
          node scripts/run-live-analysis.js 
          --jobId=${{ github.event.inputs.job_id }} 
          --companyId=${{ github.event.inputs.company_id }}